.\"
.\" SPDX-License-Identifier: BSD-2-Clause
.\"
.\" Copyright (c) 2024, Ryan Moeller <ryan-moeller@att.net>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd March 1, 2024
.Dt FILENO 3lua
.Os
.Sh NAME
.Nm :fileno
.Nd Lua binding for
.Xr fileno 3 .
.Sh SYNOPSIS
.Bd -literal
require('fileno')
.Ed
.Pp
.Bl -tag -width XXXX -compact
.It Dv fd = io.stdin:fileno()
.El
.Sh DESCRIPTION
The
.Nm fileno
module provides a binding for the
.Xr fileno 3
library routine as a method on file handle objects.
.Bl -tag -width XXXX
.It Dv fd = io.stdin:fileno()
Get the fileno of the
.Pq stdin
file handle.
.Sh EXAMPLES
Wait for stdin to be readable using kqueue:
.Bd -literal -offset indent
require('fileno')
local kqueue = require('kqueue')
local ucl = require('ucl')

local kq = kqueue.kqueue()

local changelist = {
	{
		ident = io.stdin:fileno(),
		filter = kqueue.EVFILT_READ,
		flags = kqueue.EV_ADD,
		fflags = 0,
		data = 0,
		udata = coroutine.create(function (event) repeat
			print("stdin is readable: ", ucl.to_json(event))
			local len = event.data
			local data = io.stdin:read(len)
			io.stdout:write(data)
			event = coroutine.yield()
		until false end)
	}
}

local event = kq:kevent(changelist)
repeat
	coroutine.resume(event.udata, event)
	event = kq:kevent()
until false

kq:close()
.Ed
.Sh SEE ALSO
.Xr kqueue 3lua ,
.Xr fileno 3
.Sh AUTHORS
.An Ryan Moeller
