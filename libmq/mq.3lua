.\"
.\" SPDX-License-Identifier: BSD-2-Clause
.\"
.\" Copyright (c) 2024, Ryan Moeller <ryan-moeller@att.net>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd January 15, 2024
.Dt MQ 3lua
.Os
.Sh NAME
.Nm open ,
.Nm unlink ,
.Nm :close ,
.Nm :getattr ,
.Nm :setattr ,
.Nm :send ,
.Nm :receive ,
.Nm O_RDONLY ,
.Nm O_WRONLY ,
.Nm O_RDWR ,
.Nm O_CREAT ,
.Nm O_EXCL ,
.Nm O_NONBLOCK
.Nd Lua bindings for
.Xr mq_open 2 ,
.Xr mq_unlink 2 ,
.Xr mq_close 2 ,
.Xr mq_getattr 2 ,
.Xr mq_setattr 2 ,
.Xr mq_send 2 ,
.Xr mq_receive 2 .
.Sh SYNOPSIS
.Bd -literal
local mq = require('mq')
.Ed
.Pp
.Bl -tag -width XXXX -compact
.It Dv q = mq.open(name, oflags[, mode[, attr]])
.It Dv attr = q:getattr()
.It Dv q:setattr(attr)
.It Dv q:send(msg, prio)
.It Dv msg, prio = q:receive(attr.msgsize)
.It Dv q:close()
.It Dv mq.unlink(name)
.El
.Sh DESCRIPTION
The
.Nm mq
module provides bindings for the
.Xr mqueuefs 5
system calls.
.Bl -tag -width XXXX
.It Dv q = mq.open(name, oflags[, mode[, attr]])
Open a message queue with the given
.Fa name
and
.Fa oflags .
.It Dv for mod in kldstat.modstat(kld.id) do ... end
Iterate status of all mods in a kld file given by
.Fa kld.id .
.Pp
The
.Fa kld
and
.Fa mod
returned match the status structs described in
.Xr kldstat 2
and
.Xr modstat 2 ,
respectively, without the
.Fa version
fields.
.Sh EXAMPLES
Describe all kld files and modules as JSON:
.Bd -literal -offset indent
local kldstat = require('kldstat')
local ucl = require('ucl')

local klds = {}
for kld in kldstat.kldstat() do
    kld.mods = {}
    for mod in kldstat.modstat(kld.id) do
        table.insert(kld.mods, mod)
    end
    table.insert(klds, kld)
end
print(ucl.to_json(klds))
.Ed
.Sh SEE ALSO
.Xr kldstat 2 ,
.Xr modstat 2
.Sh AUTHORS
.An Ryan Moeller
