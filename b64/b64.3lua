.\"
.\" SPDX-License-Identifier: BSD-2-Clause
.\"
.\" Copyright (c) 2024-2025 Ryan Moeller
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd September 6, 2025
.Dt B64 3lua
.Os
.Sh NAME
.Nm b64
.Nd Lua bindings for b64_ntop and b64_pton
.Sh SYNOPSIS
.Bd -literal
base64 = require('b64')
.Ed
.Pp
.Bl -tag -width XXXX -compact
.It Dv str = base64.encode(data )
.It Dv data = base64.decode(str )
.El
.Sh DESCRIPTION
The
.Nm b64
module provides bindings for the libc base64 encode and decode functions.
.Bl -tag -width XXXX
.It Dv str = base64.encode(data )
Encode the given
.Pq data
string to a base64 string.
.It Dv data = base64.decode(str )
Decode the given base64-encoded string
.Pq str
to the original plain data string.
.El
.Sh EXAMPLES
Encode and decode a string as base64:
.Bd -literal -offset indent
base64 = require('b64')

input = "Hello, FreeBSD!"
encoded = base64.encode(input)
output = base64.decode(encoded)
assert(output == input)
.Ed
.Sh SEE ALSO
.Xr md 3lua Pq Pa https://github.com/ryan-moeller/flualibs ,
.Xr xor 3lua Pq Pa https://github.com/ryan-moeller/flualibs
.Sh AUTHORS
.An Ryan Moeller
