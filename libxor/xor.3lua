.\"
.\" SPDX-License-Identifier: BSD-2-Clause
.\"
.\" Copyright (c) 2024-2025 Ryan Moeller
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd March 30, 2024
.Dt XOR 3lua
.Os
.Sh NAME
.Nm xor
.Nd Lua library for a simple XOR cipher
.Sh SYNOPSIS
.Bd -literal
xor = require('xor')
.Ed
.Pp
.Bl -tag -width XXXX -compact
.It Dv output = xor.apply(input , key )
.El
.Sh DESCRIPTION
The
.Nm
module provides a function for encrypting and decrypting strings using a simple
XOR cipher.
Both operations are achieved using the same function.
.Bl -tag -width XXXX
.It Dv output = xor.apply(input , key )
Apply the XOR cipher to an input string using a given key.
The format of the key must be a table of four integers.
.El
.Sh EXAMPLES
Encrypt and decrypt a string:
.Bd -literal -offset indent
xor = require('xor')

key = { 222, 123, 42, 89 }
input = "Hello, FreeBSD!"

ciphertext = xor.apply(input, key)
plaintext = xor.apply(ciphertext, key)
assert(plaintext == input)
.Ed
.Sh SEE ALSO
.Xr md 3lua Pq Pa https://github.com/ryan-moeller/flualibs ,
.Xr roken 3lua Pq Pa https://github.com/ryan-moeller/flualibs
.Sh AUTHORS
.An Ryan Moeller
